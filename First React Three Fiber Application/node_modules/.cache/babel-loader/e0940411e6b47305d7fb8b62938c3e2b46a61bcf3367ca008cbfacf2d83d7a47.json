{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jorge\\\\PortfolioWeb\\\\41-first-react-app\\\\src\\\\CustomObject.js\",\n  _s = $RefreshSig$();\nimport * as THREE from 'three';\nimport { useRef, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomObject() {\n  _s();\n  const geometryRef = useRef();\n  const verticesCount = 10 * 3;\n\n  // To avoid doing this calculation every time geometry need to be redrawn\n  const positions = useMemo(() => {\n    const positions = new Float32Array(verticesCount * 3);\n    for (let i = 0; i < verticesCount * 3; i++) positions[i] = (Math.random() - 0.5) * 3;\n    return positions;\n  }, []);\n  geometryRef.current.computeVertexNormals();\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      ref: geometryRef,\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        attach: \"attributes-position\",\n        count: verticesCount,\n        itemSize: 3,\n        array: positions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: \"red\",\n      side: THREE.DoubleSide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n}\n_s(CustomObject, \"8gfqhZNVYaLVDhJhYKLIndRmJkE=\");\n_c = CustomObject;\nvar _c;\n$RefreshReg$(_c, \"CustomObject\");","map":{"version":3,"names":["THREE","useRef","useMemo","CustomObject","geometryRef","verticesCount","positions","Float32Array","i","Math","random","current","computeVertexNormals","DoubleSide"],"sources":["C:/Users/jorge/PortfolioWeb/41-first-react-app/src/CustomObject.js"],"sourcesContent":["import * as THREE from 'three'\r\nimport { useRef, useMemo } from 'react'\r\n\r\n\r\n\r\nexport default function CustomObject()\r\n{\r\n    const geometryRef = useRef()\r\n    const verticesCount = 10 * 3\r\n    \r\n    // To avoid doing this calculation every time geometry need to be redrawn\r\n    const positions = useMemo(() => \r\n    {\r\n        const positions = new Float32Array(verticesCount * 3)\r\n        \r\n        for(let i = 0; i < verticesCount * 3; i++)\r\n        positions[i] = (Math.random() - 0.5) * 3\r\n        \r\n        return positions\r\n    }, [])\r\n    geometryRef.current.computeVertexNormals()\r\n\r\n    return <mesh>\r\n        <bufferGeometry ref={ geometryRef }>\r\n            <bufferAttribute \r\n                attach=\"attributes-position\"\r\n                count={ verticesCount }\r\n                itemSize={3}\r\n                array={positions}\r\n            />\r\n        </bufferGeometry>\r\n        <meshStandardMaterial color=\"red\" side={THREE.DoubleSide}/>\r\n    </mesh>   \r\n}"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,EAAEC,OAAO,QAAQ,OAAO;AAAA;AAIvC,eAAe,SAASC,YAAY,GACpC;EAAA;EACI,MAAMC,WAAW,GAAGH,MAAM,EAAE;EAC5B,MAAMI,aAAa,GAAG,EAAE,GAAG,CAAC;;EAE5B;EACA,MAAMC,SAAS,GAAGJ,OAAO,CAAC,MAC1B;IACI,MAAMI,SAAS,GAAG,IAAIC,YAAY,CAACF,aAAa,GAAG,CAAC,CAAC;IAErD,KAAI,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,aAAa,GAAG,CAAC,EAAEG,CAAC,EAAE,EACzCF,SAAS,CAACE,CAAC,CAAC,GAAG,CAACC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,IAAI,CAAC;IAExC,OAAOJ,SAAS;EACpB,CAAC,EAAE,EAAE,CAAC;EACNF,WAAW,CAACO,OAAO,CAACC,oBAAoB,EAAE;EAE1C,oBAAO;IAAA,wBACH;MAAgB,GAAG,EAAGR,WAAa;MAAA,uBAC/B;QACI,MAAM,EAAC,qBAAqB;QAC5B,KAAK,EAAGC,aAAe;QACvB,QAAQ,EAAE,CAAE;QACZ,KAAK,EAAEC;MAAU;QAAA;QAAA;QAAA;MAAA;IACnB;MAAA;MAAA;MAAA;IAAA,QACW,eACjB;MAAsB,KAAK,EAAC,KAAK;MAAC,IAAI,EAAEN,KAAK,CAACa;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACxD;AACX;AAAC,GA5BuBV,YAAY;AAAA,KAAZA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}